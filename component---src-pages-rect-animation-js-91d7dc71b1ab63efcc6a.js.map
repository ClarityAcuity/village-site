{"version":3,"sources":["webpack://village/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://village/./src/pages/rect/animation.js","webpack://village/./src/pages/rect/canvas.js","webpack://village/./src/pages/rect/pure-canvas.js"],"names":["_assertThisInitialized","self","ReferenceError","Animation","props","state","angle","updateAnimationState","bind","componentDidMount","this","rAF","requestAnimationFrame","setState","prevState","componentWillUnmount","cancelAnimationFrame","render","React","Canvas","saveContext","ctx","componentDidUpdate","width","canvas","height","save","beginPath","clearRect","translate","rotate","Math","PI","fillStyle","fillRect","restore","contextRef","PureCanvas","shouldComponentUpdate","ref","node","getContext"],"mappings":"+GAAe,SAASA,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,E,sHCFHE,E,YACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAAEC,MAAO,GACtB,EAAKC,qBAAuB,EAAKA,qBAAqBC,MAA1B,WAHX,G,uCAMnBC,kBAAA,WACEC,KAAKC,IAAMC,sBAAsBF,KAAKH,uB,EAGxCA,qBAAA,WACEG,KAAKG,UAAS,SAAAC,GAAS,MAAK,CAAER,MAAOQ,EAAUR,MAAQ,MACvDI,KAAKC,IAAMC,sBAAsBF,KAAKH,uB,EAGxCQ,qBAAA,WACEC,qBAAqBN,KAAKC,M,EAG5BM,OAAA,WACE,OAAO,gBAAC,UAAD,CAAQX,MAAOI,KAAKL,MAAMC,S,GArBbY,aAyBxB,a,qFCzBMC,E,YACJ,WAAYf,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKgB,YAAc,EAAKA,YAAYZ,MAAjB,WAFF,G,uCAKnBY,YAAA,SAAYC,GACVX,KAAKW,IAAMA,G,EAGbC,mBAAA,WACE,IAAQhB,EAAUI,KAAKN,MAAfE,MACFiB,EAAQb,KAAKW,IAAIG,OAAOD,MACxBE,EAASf,KAAKW,IAAIG,OAAOC,OAC/Bf,KAAKW,IAAIK,OACThB,KAAKW,IAAIM,YACTjB,KAAKW,IAAIO,UAAU,EAAG,EAAGL,EAAOE,GAChCf,KAAKW,IAAIQ,UAAUN,EAAQ,EAAGE,EAAS,GACvCf,KAAKW,IAAIS,OAAQxB,EAAQyB,KAAKC,GAAM,KACpCtB,KAAKW,IAAIY,UAAY,UACrBvB,KAAKW,IAAIa,UAAUX,EAAQ,GAAIE,EAAS,EAAGF,EAAQ,EAAGE,EAAS,GAC/Df,KAAKW,IAAIc,W,EAGXlB,OAAA,WACE,OAAO,gBAAC,UAAD,CAAYmB,WAAY1B,KAAKU,e,GAzBnBF,aA6BrB,a,iEC9BMmB,E,sGACJC,sBAAA,WACE,OAAO,G,EAGTrB,OAAA,WAAU,IAAD,OACP,OACE,0BACEM,MAAM,MACNE,OAAO,MACPc,IAAK,SAAAC,GAAI,OACPA,EAAO,EAAKpC,MAAMgC,WAAWI,EAAKC,WAAW,OAAS,S,GAXvCvB,aAkBzB","file":"component---src-pages-rect-animation-js-91d7dc71b1ab63efcc6a.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from \"react\"\nimport Canvas from \"./canvas\"\n\nclass Animation extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { angle: 0 }\n    this.updateAnimationState = this.updateAnimationState.bind(this)\n  }\n\n  componentDidMount() {\n    this.rAF = requestAnimationFrame(this.updateAnimationState)\n  }\n\n  updateAnimationState() {\n    this.setState(prevState => ({ angle: prevState.angle + 1 }))\n    this.rAF = requestAnimationFrame(this.updateAnimationState)\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.rAF)\n  }\n\n  render() {\n    return <Canvas angle={this.state.angle} />\n  }\n}\n\nexport default Animation\n","import React from \"react\"\nimport PureCanvas from \"./pure-canvas\"\n\nclass Canvas extends React.Component {\n  constructor(props) {\n    super(props)\n    this.saveContext = this.saveContext.bind(this)\n  }\n\n  saveContext(ctx) {\n    this.ctx = ctx\n  }\n\n  componentDidUpdate() {\n    const { angle } = this.props\n    const width = this.ctx.canvas.width\n    const height = this.ctx.canvas.height\n    this.ctx.save()\n    this.ctx.beginPath()\n    this.ctx.clearRect(0, 0, width, height)\n    this.ctx.translate(width / 2, height / 2)\n    this.ctx.rotate((angle * Math.PI) / 180)\n    this.ctx.fillStyle = \"#4397AC\"\n    this.ctx.fillRect(-width / 4, -height / 4, width / 2, height / 2)\n    this.ctx.restore()\n  }\n\n  render() {\n    return <PureCanvas contextRef={this.saveContext}></PureCanvas>\n  }\n}\n\nexport default Canvas\n","import React from \"react\"\n\nclass PureCanvas extends React.Component {\n  shouldComponentUpdate() {\n    return false\n  }\n\n  render() {\n    return (\n      <canvas\n        width=\"300\"\n        height=\"300\"\n        ref={node =>\n          node ? this.props.contextRef(node.getContext(\"2d\")) : null\n        }\n      />\n    )\n  }\n}\n\nexport default PureCanvas\n"],"sourceRoot":""}