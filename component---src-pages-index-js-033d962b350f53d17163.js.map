{"version":3,"sources":["webpack://village/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://village/./node_modules/@chakra-ui/layout/dist/esm/text.js","webpack://village/./src/components/layout/index.js","webpack://village/./node_modules/@chakra-ui/layout/dist/esm/container.js","webpack://village/./src/components/image.js","webpack://village/./src/pages/index.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","Text","props","ref","styles","rest","aliasedProps","textAlign","align","textDecoration","decoration","textTransform","casing","className","cx","__css","displayName","children","useStaticQuery","site","siteMetadata","title","description","username","keywords","height","flexDirection","siteTitle","as","flexGrow","padding","overflow","margin","maxWidth","Container","_omitThemingProps","centerContent","display","alignItems","Image","image","alt","G","defaultProp","gatsbyImageData","placeholderImage","childImageSharp"],"mappings":"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","file":"component---src-pages-index-js-033d962b350f53d17163.js","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__, filterUndefined } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/docs/typography/text\n */\n\nexport var Text = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Text\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\", \"align\", \"decoration\", \"casing\"]);\n\n  var aliasedProps = filterUndefined({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing\n  });\n  return /*#__PURE__*/React.createElement(chakra.p, _extends({\n    ref: ref,\n    className: cx(\"chakra-text\", props.className)\n  }, aliasedProps, rest, {\n    __css: styles\n  }));\n});\n\nif (__DEV__) {\n  Text.displayName = \"Text\";\n}","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Box, Flex } from \"@chakra-ui/react\"\nimport Header from \"../header\"\nimport Footer from \"../footer\"\nimport SEOComponent from \"../seo\"\n\nconst Layout = ({ children }) => {\n  const {\n    site: {\n      siteMetadata: { title, description, username, keywords },\n    },\n  } = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          description\n          username\n          keywords\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <SEOComponent\n        title={title}\n        description={description}\n        keywords={keywords}\n      />\n      <Flex height=\"100vh\" flexDirection=\"column\">\n        <Header siteTitle={title} />\n        <Box\n          as=\"main\"\n          flexGrow=\"1\"\n          padding=\"1.45rem 1.0875rem 1.45rem\"\n          overflow=\"auto\"\n        >\n          <Box margin=\"0 auto\" maxWidth=\"960px\">\n            {children}\n          </Box>\n        </Box>\n        <Footer username={username} />\n      </Flex>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n */\n\nexport var Container = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      centerContent = _omitThemingProps.centerContent,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\", \"centerContent\"]);\n\n  var styles = useStyleConfig(\"Container\", props);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-container\", className)\n  }, rest, {\n    __css: _extends({}, styles, centerContent && {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    })\n  }));\n});\n\nif (__DEV__) {\n  Container.displayName = \"Container\";\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport { Box } from \"@chakra-ui/react\"\n\n/*\n * This component is built using `gatsby-plugin-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-plugin-image`: https://gatsby.dev/gatsby-plugin-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image = ({ image, alt, ...props }) => {\n  return (\n    <Box {...props}>{image && <GatsbyImage image={image} alt={alt} />}</Box>\n  )\n}\n\nImage.propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: PropTypes.string,\n}\n\nImage.defaultProp = {\n  alt: \"\",\n}\n\nexport default Image\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Container, Heading, Text } from \"@chakra-ui/react\"\nimport Layout from \"../components/layout\"\nimport Image from \"../components/image\"\n\nfunction IndexPage() {\n  const {\n    site: {\n      siteMetadata: { username },\n    },\n    placeholderImage: {\n      childImageSharp: { gatsbyImageData },\n    },\n  } = useStaticQuery(graphql`\n    query {\n      site {\n        id\n        siteMetadata {\n          username\n        }\n      }\n      placeholderImage: file(relativePath: { eq: \"bird.jpeg\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            layout: CONSTRAINED\n            placeholder: BLURRED\n            formats: [AUTO, WEBP, AVIF]\n          )\n        }\n      }\n    }\n  `)\n  return (\n    <Layout>\n      <Container>\n        <Image image={gatsbyImageData} alt=\"\" />\n        <Heading as=\"h3\">@{username}</Heading>\n        <Text>a Taipei-based developer</Text>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}