{"version":3,"sources":["webpack://village/./src/components/layout/index.js","webpack://village/./src/pages/ray-tracing/animation.js","webpack://village/./src/lib/hooks/use-click-outside.js","webpack://village/./src/pages/ray-tracing/index.js"],"names":["children","useStaticQuery","site","siteMetadata","title","description","username","keywords","height","flexDirection","siteTitle","as","flexGrow","padding","overflow","margin","maxWidth","ref","callback","handleClick","rAF","useRef","clickRef","useMemo","initImage","defaultImage","image","defaultColorMap","colorMap","scene","useState","setImage","setColorMap","iteration","setIteration","isFocus","setIsFocus","_updateAnimationState","useCallback","getImage","width","next","value","nextImage","nextColorMap","cancelAnimation","cancelAnimationFrame","current","e","contains","target","React","document","addEventListener","removeEventListener","useEffect","requestAnimationFrame","onClick","size","SizeEnums","isTruncated"],"mappings":"iLA8DA,IA/Ce,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAChB,GAIIC,oBAAe,cAHjBC,KACEC,aAAgBC,EAFpB,EAEoBA,MAAOC,EAF3B,EAE2BA,YAAaC,EAFxC,EAEwCA,SAAUC,EAFlD,EAEkDA,SAelD,OACE,gCACE,gBAAC,IAAD,CACEH,MAAOA,EACPC,YAAaA,EACbE,SAAUA,IAEZ,gBAAC,IAAD,CAAMC,OAAO,QAAQC,cAAc,UACjC,gBAAC,IAAD,CAAQC,UAAWN,IACnB,gBAAC,KAAD,CACEO,GAAG,OACHC,SAAS,IACTC,QAAQ,4BACRC,SAAS,QAET,gBAAC,KAAD,CAAKC,OAAO,SAASC,SAAS,SAC3BhB,IAGL,gBAAC,IAAD,CAAQM,SAAUA,Q,0HCK1B,MAnDA,WACE,ICL8BW,EAAKC,EAC7BC,EDMAC,GAAMC,cACNC,GAAWD,cACjB,GAAkEE,cAChE,kBAAMC,QALM,IACC,OAKb,IAFaC,EAAf,EAAQC,MAA+BC,EAAvC,EAA6BC,SAA2BC,EAAxD,EAAwDA,MAIxD,GAA0BC,cAASL,GAA5BC,EAAP,KAAcK,EAAd,KACA,GAAgCD,cAASH,GAAlCC,EAAP,KAAiBI,EAAjB,KACA,GAAkCF,cAAS,GAApCG,EAAP,KAAkBC,EAAlB,KACA,GAA8BJ,eAAS,GAAhCK,EAAP,KAAgBC,EAAhB,KACMC,GAAwBC,kBAAY,WACxC,OAEIC,QAAS,CAAEV,QAAOW,MAfV,IAeiBhC,OAdhB,IAcwBoB,WAAUK,cAAaQ,OAD1DC,MAAgBC,EADlB,EACWjB,MAA4BkB,EADvC,EAC6BhB,SAE7BG,EAASY,GACTX,EAAYY,GACZV,EAAaD,EAAY,KACxB,CAACJ,EAAOD,EAAUK,IAiBrB,SAASY,IACPC,qBAAqB1B,EAAI2B,SAG3B,OC7C8B9B,ED0BdK,EC1BmBJ,ED0BT,WACxBkB,GAAW,GACXS,KC3BI1B,EAAc,SAAA6B,GACd/B,EAAI8B,UAAY9B,EAAI8B,QAAQE,SAASD,EAAEE,SACzChC,KAGJiC,aAAgB,WAEd,OADAC,SAASC,iBAAiB,QAASlC,GAC5B,WACLiC,SAASE,oBAAoB,QAASnC,QDsB1CoC,gBAAU,WACR,OAAO,kBAAMV,OACZ,KAEHU,gBAAU,WACJpB,IACFf,EAAI2B,QAAUS,sBAAsBnB,MAErC,CAACJ,EAAWE,EAASE,IAOtB,gBAAC,KAAD,CAAKpB,IAAKK,EAAUmC,QAAS,kBAAMrB,GAAW,KACxCH,EADN,gBAEIE,EAAU,aAAe,kCAE3B,gBAAC,UAAD,CAAQT,MAAOA,EAAOc,MA7CZ,IA6C0BhC,OA5CzB,S,8FESjB,UAXuB,WACrB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAASG,GAAG,KAAK+C,KAAMC,YAAkBC,aAAW,GAApD,4BAGA,gBAAC,UAAD","file":"component---src-pages-ray-tracing-index-js-f3044fe278d064fc1d53.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Box, Flex } from \"@chakra-ui/react\"\nimport Header from \"../header\"\nimport Footer from \"../footer\"\nimport SEOComponent from \"../seo\"\n\nconst Layout = ({ children }) => {\n  const {\n    site: {\n      siteMetadata: { title, description, username, keywords },\n    },\n  } = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          description\n          username\n          keywords\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <SEOComponent\n        title={title}\n        description={description}\n        keywords={keywords}\n      />\n      <Flex height=\"100vh\" flexDirection=\"column\">\n        <Header siteTitle={title} />\n        <Box\n          as=\"main\"\n          flexGrow=\"1\"\n          padding=\"1.45rem 1.0875rem 1.45rem\"\n          overflow=\"auto\"\n        >\n          <Box margin=\"0 auto\" maxWidth=\"960px\">\n            {children}\n          </Box>\n        </Box>\n        <Footer username={username} />\n      </Flex>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React, { useEffect, useState, useRef, useMemo, useCallback } from \"react\"\nimport { Box } from \"@chakra-ui/react\"\nimport Canvas from \"./canvas\"\nimport { initImage, getImage } from \"../../lib/ray-tracing/helpers\"\nimport { useClickOutside } from \"../../lib/hooks/use-click-outside\"\n\nfunction Animation() {\n  const width = 400\n  const height = 200\n  const rAF = useRef()\n  const clickRef = useRef()\n  const { image: defaultImage, colorMap: defaultColorMap, scene } = useMemo(\n    () => initImage(width, height),\n    []\n  )\n  const [image, setImage] = useState(defaultImage)\n  const [colorMap, setColorMap] = useState(defaultColorMap)\n  const [iteration, setIteration] = useState(1)\n  const [isFocus, setIsFocus] = useState(true)\n  const _updateAnimationState = useCallback(() => {\n    const {\n      value: { image: nextImage, colorMap: nextColorMap },\n    } = getImage({ scene, width, height, colorMap, iteration }).next()\n    setImage(nextImage)\n    setColorMap(nextColorMap)\n    setIteration(iteration + 1)\n  }, [scene, colorMap, iteration])\n\n  useClickOutside(clickRef, () => {\n    setIsFocus(false)\n    cancelAnimation()\n  })\n\n  useEffect(() => {\n    return () => cancelAnimation()\n  }, [])\n\n  useEffect(() => {\n    if (isFocus) {\n      rAF.current = requestAnimationFrame(_updateAnimationState)\n    }\n  }, [iteration, isFocus, _updateAnimationState])\n\n  function cancelAnimation() {\n    cancelAnimationFrame(rAF.current)\n  }\n\n  return (\n    <Box ref={clickRef} onClick={() => setIsFocus(true)}>\n      {`${iteration} iteration, ${\n        isFocus ? \"playing...\" : \"pausing, click image to resume\"\n      }`}\n      <Canvas image={image} width={width} height={height} />\n    </Box>\n  )\n}\n\nexport default Animation\n","import React from \"react\"\n\nexport const useClickOutside = (ref, callback) => {\n  const handleClick = e => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      callback()\n    }\n  }\n  React.useEffect(() => {\n    document.addEventListener(\"click\", handleClick)\n    return () => {\n      document.removeEventListener(\"click\", handleClick)\n    }\n  })\n}\n","import React from \"react\"\nimport { Heading } from \"@chakra-ui/react\"\nimport Animation from \"./animation\"\nimport Layout from \"../../components/layout\"\nimport { SizeEnums } from \"../../lib/style-utils\"\n\nconst RayTracingPage = () => {\n  return (\n    <Layout>\n      <Heading as=\"h4\" size={SizeEnums.MIDDLE} isTruncated>\n        Ray Tracing in a Weekend\n      </Heading>\n      <Animation />\n    </Layout>\n  )\n}\n\nexport default RayTracingPage\n"],"sourceRoot":""}