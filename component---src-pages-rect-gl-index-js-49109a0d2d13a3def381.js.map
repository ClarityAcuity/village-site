{"version":3,"sources":["webpack://village/./src/components/layout/index.js","webpack://village/./src/pages/rect-gl/animation.js","webpack://village/./src/pages/rect-gl/index.js"],"names":["children","useStaticQuery","site","siteMetadata","title","description","username","keywords","height","flexDirection","siteTitle","as","flexGrow","padding","overflow","margin","maxWidth","Animation","props","state","cubeRotation","updateAnimationState","bind","componentDidMount","this","rAF","requestAnimationFrame","setState","prevState","componentWillUnmount","cancelAnimationFrame","render","React","size","SizeEnums","isTruncated"],"mappings":"mLA8DA,IA/Ce,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAChB,GAIIC,oBAAe,cAHjBC,KACEC,aAAgBC,EAFpB,EAEoBA,MAAOC,EAF3B,EAE2BA,YAAaC,EAFxC,EAEwCA,SAAUC,EAFlD,EAEkDA,SAelD,OACE,gCACE,gBAAC,IAAD,CACEH,MAAOA,EACPC,YAAaA,EACbE,SAAUA,IAEZ,gBAAC,IAAD,CAAMC,OAAO,QAAQC,cAAc,UACjC,gBAAC,IAAD,CAAQC,UAAWN,IACnB,gBAAC,KAAD,CACEO,GAAG,OACHC,SAAS,IACTC,QAAQ,4BACRC,SAAS,QAET,gBAAC,KAAD,CAAKC,OAAO,SAASC,SAAS,SAC3BhB,IAGL,gBAAC,IAAD,CAAQM,SAAUA,Q,qFCjDpBW,E,YACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CAAEC,aAAc,GAC7B,EAAKC,qBAAuB,EAAKA,qBAAqBC,MAA1B,WAHX,G,uCAMnBC,kBAAA,WACEC,KAAKC,IAAMC,sBAAsBF,KAAKH,uB,EAGxCA,qBAAA,WACEG,KAAKG,UAAS,SAAAC,GAAS,MAAK,CAC1BR,aAAcQ,EAAUR,aAAe,QAEzCI,KAAKC,IAAMC,sBAAsBF,KAAKH,uB,EAGxCQ,qBAAA,WACEC,qBAAqBN,KAAKC,M,EAG5BM,OAAA,WACE,OAAO,gBAAC,UAAD,CAAQX,aAAcI,KAAKL,MAAMC,gB,GAvBpBY,aA2BxB,a,+FCbA,UAXmB,WACjB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAASrB,GAAG,KAAKsB,KAAMC,YAAkBC,aAAW,GAApD,kCAGA,gBAAC,UAAD","file":"component---src-pages-rect-gl-index-js-49109a0d2d13a3def381.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Box, Flex } from \"@chakra-ui/react\"\nimport Header from \"../header\"\nimport Footer from \"../footer\"\nimport SEOComponent from \"../seo\"\n\nconst Layout = ({ children }) => {\n  const {\n    site: {\n      siteMetadata: { title, description, username, keywords },\n    },\n  } = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          description\n          username\n          keywords\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <SEOComponent\n        title={title}\n        description={description}\n        keywords={keywords}\n      />\n      <Flex height=\"100vh\" flexDirection=\"column\">\n        <Header siteTitle={title} />\n        <Box\n          as=\"main\"\n          flexGrow=\"1\"\n          padding=\"1.45rem 1.0875rem 1.45rem\"\n          overflow=\"auto\"\n        >\n          <Box margin=\"0 auto\" maxWidth=\"960px\">\n            {children}\n          </Box>\n        </Box>\n        <Footer username={username} />\n      </Flex>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport Canvas from \"./canvas\"\n\nclass Animation extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { cubeRotation: 0 }\n    this.updateAnimationState = this.updateAnimationState.bind(this)\n  }\n\n  componentDidMount() {\n    this.rAF = requestAnimationFrame(this.updateAnimationState)\n  }\n\n  updateAnimationState() {\n    this.setState(prevState => ({\n      cubeRotation: prevState.cubeRotation + 0.01,\n    }))\n    this.rAF = requestAnimationFrame(this.updateAnimationState)\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.rAF)\n  }\n\n  render() {\n    return <Canvas cubeRotation={this.state.cubeRotation} />\n  }\n}\n\nexport default Animation\n","import React from \"react\"\nimport { Heading } from \"@chakra-ui/react\"\nimport Animation from \"./animation\"\nimport Layout from \"../../components/layout\"\nimport { SizeEnums } from \"../../lib/style-utils\"\n\nconst RectGLPage = () => {\n  return (\n    <Layout>\n      <Heading as=\"h4\" size={SizeEnums.MIDDLE} isTruncated>\n        3D Rotating Rectangle by WebGL\n      </Heading>\n      <Animation />\n    </Layout>\n  )\n}\n\nexport default RectGLPage\n"],"sourceRoot":""}