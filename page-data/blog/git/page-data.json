{"componentChunkName":"component---src-components-md-posts-layout-js","path":"/blog/git/","result":{"data":{"mdx":{"id":"9142d716-15bf-5e2a-8a5a-95728fef0777","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"GIT\",\n  \"date\": \"2021-05-03\",\n  \"updated\": \"2021-05-03\",\n  \"author\": \"Villager Liao\",\n  \"keywords\": [\"git\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Git\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Modify commit message\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git commit --amend -m \\\"new message\\\"\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add files to last commit\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"git add <file_name>\\ngit commit --amend HEAD~1\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Undo commits\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# undo the last commit but keep the changes\\ngit reset --soft HEAD~1\\n# undo both commit and changes\\ngit reset --hard HEAD~1\\n# undo all your local changes\\ngit reset --hard origin/<branch_name>\\n# undoes a commit by creating a new commit\\ngit revert HEAD\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# undo a merge commit that has already pushed to the remote branch\\ngit revert -m 1 <commit_id>\\n\")), mdx(\"p\", null, \"You can also undo any number of commits. E.g:\"), mdx(\"p\", null, \"git reset HEAD~3 (going back three commits before HEAD).\\ngit reset --hard <commit_id> (going back to a specific commit).\\nUse git reset if the commit is not pushed yet and you don't want to introduce a bad commit to the remote branch.\"), mdx(\"p\", null, \"Use git revert to revert a merge commit that has already pushed to the remote branch.\"), mdx(\"p\", null, \"Use git log to review the commit history.\"), mdx(\"p\", null, \"If you prefer, you can also create a new commit with the fix.\"), mdx(\"h2\", null, \"Reference\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://ohshitgit.com/\"\n  }, \"OhShitGit\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"GIT","date":"2021-05-03","author":"Villager Liao","keywords":["git"]},"slug":"git/","excerpt":"GIT Modify commit message Add files to last commit Undo commits You can also undo any number of commits. E.g: git reset HEAD~3 (going backâ€¦"}},"pageContext":{"id":"9142d716-15bf-5e2a-8a5a-95728fef0777","slug":"git/"}},"staticQueryHashes":["1059609371","2459496995"]}