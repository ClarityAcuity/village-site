{"componentChunkName":"component---src-components-md-posts-layout-js","path":"/blog/highlight-test","result":{"data":{"mdx":{"id":"7a4d10fe-f04b-5ac6-ad23-90dc797b3b9a","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Highlight Test\",\n  \"date\": \"2021-01-11\",\n  \"author\": \"Villager Liao\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"// In your gatsby-config.js\\nplugins: [\\n  {\\n    resolve: `gatsby-transformer-remark`,\\n    options: {\\n      plugins: [`gatsby-remark-prismjs`],\\n    },\\n  },\\n]\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript{numberLines:\",\n    \"metastring\": \"true}\",\n    \"true}\": true\n  }, \"// In your gatsby-config.js\\nplugins: [\\n  {\\n    resolve: `gatsby-transformer-remark`,\\n    options: {\\n      plugins: [`gatsby-remark-prismjs`],\\n    },\\n  },\\n]\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"class FlavorForm extends React.Component {\\n  // highlight-line\\n  constructor(props) {\\n    super(props);\\n    this.state = {value: 'coconut'};\\n\\n    this.handleChange = this.handleChange.bind(this);\\n    this.handleSubmit = this.handleSubmit.bind(this);\\n  }\\n\\n  handleChange(event) {\\n    // highlight-next-line\\n    this.setState({value: event.target.value});\\n  }\\n\\n  // highlight-start\\n  handleSubmit(event) {\\n    alert('Your favorite flavor is: ' + this.state.value);\\n    event.preventDefault();\\n  }\\n  // highlight-end\\n\\n  render() {\\n    return (\\n      { /* highlight-range{1,4-9,12} */ }\\n      <form onSubmit={this.handleSubmit}>\\n        <label>\\n          Pick your favorite flavor:\\n          <select value={this.state.value} onChange={this.handleChange}>\\n            <option value=\\\"grapefruit\\\">Grapefruit</option>\\n            <option value=\\\"lime\\\">Lime</option>\\n            <option value=\\\"coconut\\\">Coconut</option>\\n            <option value=\\\"mango\\\">Mango</option>\\n          </select>\\n        </label>\\n        <input type=\\\"submit\\\" value=\\\"Submit\\\" />\\n      </form>\\n    );\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript{1,4-6}\"\n  }, \"// In your gatsby-config.js\\nplugins: [\\n  {\\n    resolve: `gatsby-transformer-remark`,\\n    options: {\\n      plugins: [`gatsby-remark-prismjs`],\\n    },\\n  },\\n]\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell{outputLines:\",\n    \"metastring\": \"2-10,12}\",\n    \"2-10,12}\": true\n  }, \"cd\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell{promptUser:\",\n    \"metastring\": \"alice}{promptHost: dev.localhost}\",\n    \"alice}{promptHost:\": true,\n    \"dev.localhost}\": true\n  }, \"ls\\n\")), mdx(\"p\", null, \"I can highlight \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"css\\xB1.some-class { background-color: red }\"), \" with CSS syntax.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Highlight Test","date":"2021-01-11","author":"Villager Liao","keywords":null},"slug":"highlight-test","excerpt":"I can highlight  cssÂ±.some-class { background-color: red }  with CSS syntax."}},"pageContext":{"id":"7a4d10fe-f04b-5ac6-ad23-90dc797b3b9a","slug":"highlight-test"}},"staticQueryHashes":["1059609371","2459496995"]}