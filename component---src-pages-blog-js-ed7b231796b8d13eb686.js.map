{"version":3,"sources":["webpack://village/./node_modules/@chakra-ui/layout/dist/esm/badge.js","webpack://village/./src/components/layout/index.js","webpack://village/./node_modules/@chakra-ui/icons/dist/esm/View.js","webpack://village/./node_modules/@chakra-ui/icons/dist/esm/Time.js","webpack://village/./src/pages/blog.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","Badge","props","ref","styles","rest","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","className","cx","__css","display","whiteSpace","verticalAlign","displayName","children","useStaticQuery","site","siteMetadata","title","description","username","keywords","height","flexDirection","siteTitle","as","flexGrow","padding","overflow","margin","maxWidth","ViewIcon","path","fill","d","cy","r","TimeIcon","SMALL","SizeEnums","LARGE","EXTRALARGE","XXL","GRAY","ColorEnums","TEAL","ColorSchemeEnums","nodes","data","allMdx","map","id","slug","timeToRead","excerpt","frontmatter","date","author","maxW","borderWidth","borderRadius","alignItems","colorScheme","fontWeight","fontSize","Link","to","marginTop","margintop","position","color","right"],"mappings":"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","file":"component---src-pages-blog-js-ed7b231796b8d13eb686.js","sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to display notifications, messages, or\n * statuses in different shapes and sizes.\n *\n * @see Docs https://chakra-ui.com/docs/data-display/badge\n */\n\nexport var Badge = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyleConfig(\"Badge\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\"]);\n\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    className: cx(\"chakra-badge\", props.className)\n  }, rest, {\n    __css: _extends({\n      display: \"inline-block\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\"\n    }, styles)\n  }));\n});\n\nif (__DEV__) {\n  Badge.displayName = \"Badge\";\n}","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Box, Flex } from \"@chakra-ui/react\"\nimport Header from \"../header\"\nimport Footer from \"../footer\"\nimport SEOComponent from \"../seo\"\n\nconst Layout = ({ children }) => {\n  const {\n    site: {\n      siteMetadata: { title, description, username, keywords },\n    },\n  } = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          description\n          username\n          keywords\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <SEOComponent\n        title={title}\n        description={description}\n        keywords={keywords}\n      />\n      <Flex height=\"100vh\" flexDirection=\"column\">\n        <Header siteTitle={title} />\n        <Box\n          as=\"main\"\n          flexGrow=\"1\"\n          padding=\"1.45rem 1.0875rem 1.45rem\"\n          overflow=\"auto\"\n        >\n          <Box margin=\"0 auto\" maxWidth=\"960px\">\n            {children}\n          </Box>\n        </Box>\n        <Footer username={username} />\n      </Flex>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import { createIcon } from \"@chakra-ui/icon\";\nimport * as React from \"react\";\nexport var ViewIcon = createIcon({\n  displayName: \"ViewIcon\",\n  path: /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"currentColor\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.432,10.524C20.787,7.614,16.4,4.538,12,4.6,7.6,4.537,3.213,7.615.568,10.524a2.211,2.211,0,0,0,0,2.948C3.182,16.351,7.507,19.4,11.839,19.4h.308c4.347,0,8.671-3.049,11.288-5.929A2.21,2.21,0,0,0,23.432,10.524ZM7.4,12A4.6,4.6,0,1,1,12,16.6,4.6,4.6,0,0,1,7.4,12Z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"2\"\n  }))\n});","import { createIcon } from \"@chakra-ui/icon\";\nimport * as React from \"react\";\nexport var TimeIcon = createIcon({\n  displayName: \"TimeIcon\",\n  path: /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"currentColor\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm0,22A10,10,0,1,1,22,12,10.011,10.011,0,0,1,12,22Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.134,15.81,12.5,11.561V6.5a1,1,0,0,0-2,0V12a1,1,0,0,0,.324.738l4.959,4.545a1.01,1.01,0,0,0,1.413-.061A1,1,0,0,0,17.134,15.81Z\"\n  }))\n});","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { Box, Badge } from \"@chakra-ui/react\"\nimport Layout from \"../components/layout\"\nimport { TimeIcon, ViewIcon } from \"@chakra-ui/icons\"\nimport { SizeEnums, ColorEnums, ColorSchemeEnums } from \"../lib/style-utils\"\n\nconst { SMALL, LARGE, EXTRALARGE, XXL } = SizeEnums\nconst { GRAY } = ColorEnums\nconst { TEAL } = ColorSchemeEnums\n\nfunction IndexPageQuery({ data }) {\n  const {\n    allMdx: { nodes },\n  } = data\n\n  function _renderPosts() {\n    return nodes.map(\n      ({\n        id,\n        slug,\n        timeToRead,\n        excerpt,\n        frontmatter: { title, date, author },\n      }) => {\n        return (\n          <Box\n            key={id}\n            maxW={XXL}\n            borderWidth=\"1px\"\n            borderRadius={LARGE}\n            overflow=\"hidden\"\n            margin=\"5\"\n          >\n            <Box padding=\"4\">\n              <Box d=\"flex\" alignItems=\"baseline\">\n                <Badge borderRadius=\"full\" colorScheme={TEAL}>\n                  {author}\n                </Badge>\n              </Box>\n              <Box as=\"h1\" fontWeight=\"semibold\" fontSize={EXTRALARGE}>\n                <Link to={`/blog/${slug}`}>{title}</Link>\n              </Box>\n              <Box marginTop=\"1\" as=\"p\" fontSize={LARGE}>\n                {excerpt}\n              </Box>\n              <Box\n                display=\"flex\"\n                margintop=\"10\"\n                alignItems=\"center\"\n                position=\"relative\"\n              >\n                <Box as=\"span\" color={GRAY} fontSize={SMALL}>\n                  <ViewIcon margin=\"2\" />\n                  {timeToRead} min read\n                </Box>\n                <Box\n                  as=\"span\"\n                  color={GRAY}\n                  fontSize=\"sm\"\n                  position=\"absolute\"\n                  right=\"0\"\n                >\n                  <TimeIcon margin=\"2\" />\n                  {date}\n                </Box>\n              </Box>\n            </Box>\n          </Box>\n        )\n      }\n    )\n  }\n  return <Layout>{_renderPosts()}</Layout>\n}\n\nexport const query = graphql`\n  query IndexPageQuery {\n    allMdx(sort: { order: DESC, fields: frontmatter___date }) {\n      nodes {\n        id\n        slug\n        timeToRead\n        excerpt\n        frontmatter {\n          title\n          date\n          author\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPageQuery\n"],"sourceRoot":""}